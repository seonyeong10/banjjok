<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="banjjok.mapper.SalonReserveMapper">
<sql id="column">
	RESERV_CODE, PET_ID, MEM_ID, SERVICE_CODE,DESN_ID, RESERV_DATE, RESERV_TIME, RESERV_DESC, service_name, service_fee, desn_name, pet_name, mem_name
</sql>
<sql id="resList">
	RESERV_CODE,RESERV_DATE,RESERV_TIME,RESERV_DESC,RESERV_USE
</sql>
<sql id="payment">
	RESERV_CODE,PAY_METHOD,TOTAL_FEE
</sql>
<select id="getCode" resultType="string">
	select to_char(sysdate, 'YYMMDD') || lpad(reserve_salon_seq.NEXTVAL,3,0) from dual
</select>
<insert id="insertRes" parameterType="banjjok.domain.SalonReserveDTO">
	insert into reserve_salon (<include refid="column" />)
	values(#{reservCode},#{petId}, #{memId}, #{serviceCode}, #{desnId}, #{reservDate}, #{reservTime}, #{reservDesc}, 
	#{serviceName}, #{serviceFee}, #{desnName}, #{petName}, #{memName})
</insert>
<insert id="insertResList" parameterType="banjjok.domain.SalonReserveDTO">
	insert into reserve_list_salon (<include refid="resList" />)
	values (#{reservCode},#{reservDate},#{reservTime},#{reservDesc},'0')
</insert>
<insert id="insertPay" parameterType="banjjok.domain.SalonPayDTO">
	insert into payment_salon(<include refid="payment" />)
	values(#{reservCode},#{payMethod},#{totalFee})
</insert>
<select id="getList" parameterType="banjjok.domain.SalonReserveDTO" resultType="banjjok.domain.MemSalReserveDTO">
	select res.reserv_code reservcode, res.reserv_date reservdate, service_name servicename, res.desn_id desnid, res.desn_name desnname, des.desn_use desnuse, pet_name petname
		,mem.mem_id memId, mem.mem_name memname, mem_mobile memmobile, reserv_use reservuse, service_fee servicefee, pay_method paymethod, total_fee totalfee,
		use_date usedate, cancle_date cancledate, res.reserv_desc reservDesc
	from reserve_salon res, member mem, payment_salon pay, reserve_list_salon lis, designer des
	where res.mem_id = mem.mem_id and res.reserv_code = pay.reserv_code 
		and res.reserv_code = lis.reserv_code and res.desn_id = des.desn_id
		<if test="memId != null">
			and res.mem_id = #{memId}
		</if>
		<if test="reservCode != null">
			and res.reserv_Code = #{reservCode}
		</if>
		<if test="desnId != null">
			and des.desn_id = #{desnId}
		</if>
		<if test="reservDate != null">
			and res.reserv_date &gt;= #{reservDate} and res.reserv_date &lt; #{cancleDate}
		</if>
	order by lis.reserv_use, res.reserv_date
</select>
<update id="updateRes" parameterType="banjjok.domain.SalonReserveDTO">
	update reserve_salon
	set reserv_date = #{reservDate}, reserv_desc = #{reservDesc}
	where reserv_code = #{reservCode}
</update>
<update id="updateRes2" parameterType="banjjok.domain.SalonReserveDTO">
	update reserve_list_salon
	set reserv_date = #{reservDate}, reserv_desc = #{reservDesc}
	where reserv_code = #{reservCode}
</update>
<update id="cancle" parameterType="banjjok.domain.SalonReserveDTO">
	update reserve_list_salon
	set reserv_use = '2', cancle_date = sysdate
	where reserv_code = #{reservCode}
</update>
<update id="updateStatus" parameterType="banjjok.domain.SalonReserveDTO">
	update reserve_list_salon
	set reserv_use = '1', use_date = sysdate
	where reserv_code = #{reservCode}
</update>
<!-- reserv_date  &gt;= #{reservDate} and reserv_date &lt; #{cancleDate} -->
<select id="isReserve" parameterType="banjjok.domain.SalonReserveDTO" resultType="int">
	select count(*) 
	from reserve_salon res, reserve_list_salon lis
	where res.reserv_code = lis.reserv_code
	and res.reserv_date = #{reservDate} and res.desn_id = #{desnId}
	and lis.reserv_use = '0'
</select>
</mapper>